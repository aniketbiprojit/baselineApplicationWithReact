{"version":3,"sources":["scripts/App.jsx","serviceWorker.js","index.js"],"names":["App","state","camera","recordedBlobs","gray_percent","contrast_percent","hue_rotate","saturate_percent","toggle","bind","fireCheck","document","getElementById","style","display","this","setState","addEventListener","processed","window","removeEventListener","displayVideo","superBuffer","Blob","type","video","setAttribute","classList","add","src","URL","createObjectURL","console","log","play","Fragment","className","onClick","id","filter","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e1ab5d8.chunk.js","sourcesContent":["import React from 'react'\n// import logo from '../assets/logo.svg'\nimport '../styles/App.scss'\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcamera: true,\n\t\t\trecordedBlobs: [],\n\t\t\tgray_percent: 0,\n\t\t\tcontrast_percent: 100,\n\t\t\thue_rotate: 0,\n\t\t\tsaturate_percent: 100,\n\t\t}\n\t\tthis.toggle = this.toggle.bind(this)\n\t\tthis.fireCheck = this.fireCheck.bind(this)\n\t}\n\tcomponentDidMount() {\n\t\tdocument.getElementById('root').style.display = 'none'\n\t\tthis.setState({ camera: true })\n\t\tlet processed = document.getElementById('processed')\n\t\tprocessed.addEventListener('change', this.toggle)\n\t}\n\n\tfireCheck() {\n\t\tlet processed = document.getElementById('processed')\n\t\tif (this.state.camera === true) {\n\t\t\tprocessed.addEventListener('change', this.toggle)\n\t\t\twindow.processed = processed\n\t\t} else {\n\t\t\tprocessed.removeEventListener('change', this.toggle)\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tif (this.state.camera === false) {\n\t\t\tdocument.getElementById('root').style.display = 'none'\n\t\t\tdocument.getElementById('application').style.display = 'block'\n\t\t\tthis.setState({ camera: true }, () => this.fireCheck())\n\t\t} else {\n\t\t\tdocument.getElementById('root').style.display = 'block'\n\t\t\tdocument.getElementById('application').style.display = 'none'\n\t\t\tthis.setState({ camera: false }, () => {\n\t\t\t\tthis.fireCheck()\n\t\t\t\tthis.displayVideo()\n\t\t\t})\n\t\t}\n\t}\n\n\tdisplayVideo() {\n\t\tlet recordedBlobs = window.recordedBlobs\n\t\tthis.setState({ recordedBlobs })\n\t\tconst superBuffer = new Blob(recordedBlobs, { type: 'video/webm' })\n\n\t\tlet video = document.getElementById('add-video')\n\t\tvideo.setAttribute('controls', 'controls')\n\t\tvideo.setAttribute('height', 480)\n\t\tvideo.setAttribute('width', 640)\n\t\tvideo.setAttribute('preload', 'none')\n\t\tvideo.setAttribute('loop', 'loop')\n\t\tvideo.classList.add('add-video')\n\n\t\tvideo.src = window.URL.createObjectURL(superBuffer)\n\t\tconsole.log(video)\n\t\tvideo.play()\n\n\t\t// const canvas = document.getElementById('canvas_video')\n\t\t// const ctx = canvas.getContext('2d')\n\n\t\t// let flag = true\n\t\t// video.addEventListener('playing', () => {\n\t\t// \tfunction step() {\n\t\t// \t\tconsole.log('step')\n\t\t// \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height)\n\t\t// \t\trequestAnimationFrame(step)\n\t\t// \t}\n\t\t// \tif (flag) requestAnimationFrame(step)\n\t\t// \tflag=false\n\t\t// })\n\t\t// window.ctx = ctx\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<button onClick={this.toggle}>Open Camera Tray.</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='parent-div' id='videos'>\n\t\t\t\t\t<video\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfilter: `grayscale(${this.state.gray_percent}%) contrast(${this.state.contrast_percent}%) saturate(${this.state.saturate_percent}%) hue-rotate(${this.state.hue_rotate}deg)`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tid='add-video'\n\t\t\t\t\t\tclassName='add-video'\n\t\t\t\t\t></video>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tid='increase_gray'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet gray_percent = this.state.gray_percent + 5\n\t\t\t\t\t\tthis.setState({ gray_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tincrease_gray\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tid='decrease_gray'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet gray_percent = this.state.gray_percent - 5\n\t\t\t\t\t\tthis.setState({ gray_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tdecrease_gray\n\t\t\t\t</button>\n\t\t\t\t{this.state.gray_percent}\n\t\t\t\t<br />\n\n\t\t\t\t<button\n\t\t\t\t\tid='increase_contrast'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet contrast_percent = this.state.contrast_percent + 5\n\t\t\t\t\t\tthis.setState({ contrast_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tincrease_contrast\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tid='decrease_contrast'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet contrast_percent = this.state.contrast_percent - 5\n\t\t\t\t\t\tthis.setState({ contrast_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tdecrease_contrast\n\t\t\t\t</button>\n\t\t\t\t{this.state.contrast_percent}\n\t\t\t\t<br />\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet hue_rotate = this.state.hue_rotate + 5\n\t\t\t\t\t\tthis.setState({ hue_rotate })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tincrease_hue\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet hue_rotate = this.state.hue_rotate - 5\n\t\t\t\t\t\tthis.setState({ hue_rotate })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tdecrease_hue\n\t\t\t\t</button>\n\t\t\t\t{this.state.hue_rotate}\n\t\t\t\t<br />\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet saturate_percent = this.state.saturate_percent + 5\n\t\t\t\t\t\tthis.setState({ saturate_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tincrease_saturate\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlet saturate_percent = this.state.saturate_percent - 5\n\t\t\t\t\t\tthis.setState({ saturate_percent })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tdecrease_saturate\n\t\t\t\t</button>\n\t\t\t\t{this.state.saturate_percent}\n\t\t\t\t<br />\n\t\t\t\t<button>Publish</button>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './main.css'\nimport './lucario.css'\nimport './styles/index.scss'\nimport App from './scripts/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}